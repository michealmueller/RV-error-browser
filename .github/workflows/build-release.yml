name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.TOKEN }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Increment version
      id: version
      run: |
        VERSION=$(cat version.txt)
        IFS='.' read -r major minor patch <<< "$VERSION"
        NEW_VERSION="$major.$minor.$((patch + 1))"
        echo "$NEW_VERSION" > version.txt
        echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git add version.txt
        git commit -m "Bump version to $NEW_VERSION"
        git push https://x-access-token:${{ secrets.TOKEN }}@github.com/${{ github.repository }}.git

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        if [ "${{ runner.os }}" = "Linux" ]; then
          sudo apt-get update
          sudo apt-get install -y upx
        elif [ "${{ runner.os }}" = "macOS" ]; then
          brew install upx
        fi

    - name: Build executable
      run: python build.py

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: RosieVision_Error_Browser_${{ runner.os }}_${{ matrix.python-version }}_${{ steps.version.outputs.version }}
        path: dist/
        if-no-files-found: error

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/RosieVision_Error_Browser_ubuntu-latest_3.8_${{ needs.build.outputs.version }}/*
          artifacts/RosieVision_Error_Browser_windows-latest_3.8_${{ needs.build.outputs.version }}/*
          artifacts/RosieVision_Error_Browser_macos-latest_3.8_${{ needs.build.outputs.version }}/*
        tag_name: v${{ needs.build.outputs.version }}
        name: RosieVision Error Browser v${{ needs.build.outputs.version }}
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }} 