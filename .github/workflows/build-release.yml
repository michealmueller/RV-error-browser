name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-xdist pytest-timeout pyyaml

    - name: Wait for PostgreSQL
      run: |
        for i in {1..10}; do
          if pg_isready -h localhost -p 5432 -U postgres; then
            break
          fi
          sleep 2
        done

    - name: Run tests with Xvfb
      run: |
        sleep 5
        xvfb-run -a python -m pytest -n auto --maxfail=1 --durations=10 --timeout=30 --timeout_method=thread || true
      continue-on-error: true

  build-linux:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y qt6-base-dev libqt6gui6 libqt6core6 libqt6widgets6 libqt6network6 libqt6opengl6 libqt6openglwidgets6 libqt6svg6 libqt6printsupport6 xvfb libegl1 libgl1-mesa-glx

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Build executable
      run: python build.py

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: postgresql-viewer_linux
        path: dist/
        if-no-files-found: error

  build-windows:
    needs: test
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Build executable
      run: python build.py

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: postgresql-viewer_windows
        path: dist/
        if-no-files-found: error

  build-macos:
    needs: test
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Install system dependencies
      run: |
        brew install upx

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Build executable
      run: python build.py

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: postgresql-viewer_macos
        path: dist/
        if-no-files-found: error

  create-release:
    needs: [test, build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/postgresql-viewer_linux/*
          artifacts/postgresql-viewer_windows/*
          artifacts/postgresql-viewer_macos/*
        tag_name: latest
        name: PostgreSQL Viewer
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }} 