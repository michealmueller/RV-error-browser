name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #     with:
  #       token: ${{ secrets.TOKEN }}

  #   - name: Set up Python
  #     uses: actions/setup-python@v5
  #     with:
  #       python-version: '3.8'

  #   - name: Install Python dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install -e .
  #       pip install pytest pytest-cov pytest-qt

  #   - name: Run tests
  #     run: |
  #       python -m pytest tests/unit/test_app.py -v -m "not gui"
  #     env:
  #       DISPLAY: ":99"
  #       QT_QPA_PLATFORM: "offscreen"

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          qt6-base-dev \
          libqt6gui6 \
          libqt6core6 \
          libqt6widgets6 \
          libqt6network6 \
          libqt6opengl6 \
          libqt6openglwidgets6 \
          libqt6svg6 \
          libqt6printsupport6 \
          xvfb \
          libegl1 \
          libgl1-mesa-dev \
          libglu1-mesa-dev \
          mesa-common-dev \
          postgresql-client \
          libpq-dev \
          upx
        sudo ln -sf /usr/lib/x86_64-linux-gnu/mesa/libEGL.so.1 /usr/lib/x86_64-linux-gnu/libEGL.so.1
        sudo ldconfig

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pyinstaller

    - name: Build executable
      run: python build.py

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: postgresql-viewer_linux
        path: dist/
        if-no-files-found: error

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Install PostgreSQL
      run: |
        # Download and install PostgreSQL 15
        $ProgressPreference = 'SilentlyContinue'
        Invoke-WebRequest -Uri "https://get.enterprisedb.com/postgresql/postgresql-15.6-1-windows-x64.exe" -OutFile "postgresql-installer.exe"
        Start-Process -FilePath ".\postgresql-installer.exe" -ArgumentList "--mode unattended --superpassword postgres --serverport 5432" -Wait
        Remove-Item "postgresql-installer.exe"
        
        # Set environment variables
        $env:PATH = "C:\Program Files\PostgreSQL\15\bin;$env:PATH"
        $env:PG_LIB_DIR = "C:\Program Files\PostgreSQL\15\lib"
        $env:PG_INCLUDE_DIR = "C:\Program Files\PostgreSQL\15\include"

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pyinstaller
        pip install psycopg2-binary --no-binary :all:

    - name: Build executable
      run: python build.py

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: postgresql-viewer_windows
        path: dist/
        if-no-files-found: error

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Install system dependencies
      run: |
        brew install postgresql@15 upx
        echo 'export PATH="/opt/homebrew/opt/postgresql@15/bin:$PATH"' >> ~/.bash_profile
        source ~/.bash_profile
        export PG_CONFIG="/opt/homebrew/opt/postgresql@15/bin/pg_config"

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pyinstaller
        pip install psycopg2-binary --no-binary :all:

    - name: Build executable
      run: python build.py

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: postgresql-viewer_macos
        path: dist/
        if-no-files-found: error

  create-release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4l
      with:
        path: artifacts

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/postgresql-viewer_linux/*
          artifacts/postgresql-viewer_windows/*
          artifacts/postgresql-viewer_macos/*
        tag_name: latest
        name: PostgreSQL Viewer
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }} 